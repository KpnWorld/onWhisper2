name: Release Bot Update

on:
  push:
    tags:
      - 'v*'  # Runs when a new version tag is pushed

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest tag
        id: tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: "onWhisper ${{ env.VERSION }}"
          body: "ðŸš€ A new version of onWhisper has been released! Check it out."
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: create-release  # Ensures this runs AFTER the release is created
    steps:
      - name: Send notification to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          PAYLOAD=$(jq -n \
            --arg version "$VERSION" \
            --arg url "https://github.com/KpnWorld/onWhisper-Bot/releases/tag/$VERSION" \
            '{content: ("ðŸš€ **onWhisper " + $version + "** has been released!\nðŸ”— [Check it out](" + $url + ")")}')
          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$DISCORD_WEBHOOK"

  restart-replit:
    name: Restart Replit Bot
    runs-on: ubuntu-latest
    needs: create-release  # Ensures this runs AFTER the release
    steps:
      - name: Ping Replit Webhook to Restart Bot
        env:
          REPLIT_WEBHOOK: ${{ secrets.REPLIT_WEBHOOK }}
        run: |
          curl -X POST "$REPLIT_WEBHOOK"
